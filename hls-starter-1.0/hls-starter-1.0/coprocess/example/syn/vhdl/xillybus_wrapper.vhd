-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2014.4
-- Copyright (C) 2014 Xilinx Inc. All rights reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xillybus_wrapper is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    in_r_dout : IN STD_LOGIC_VECTOR (31 downto 0);
    in_r_empty_n : IN STD_LOGIC;
    in_r_read : OUT STD_LOGIC;
    out_r_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    out_r_full_n : IN STD_LOGIC;
    out_r_write : OUT STD_LOGIC;
    debug_ready : IN STD_LOGIC_VECTOR (7 downto 0);
    debug_out : OUT STD_LOGIC_VECTOR (7 downto 0);
    debug_out_ap_vld : OUT STD_LOGIC );
end;


architecture behav of xillybus_wrapper is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "xillybus_wrapper,hls_ip_2014_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.100000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=1,HLS_SYN_FF=481,HLS_SYN_LUT=504}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_st1_fsm_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    constant ap_ST_st2_fsm_1 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_ST_st3_fsm_2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000100";
    constant ap_ST_st4_fsm_3 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000001000";
    constant ap_ST_st5_fsm_4 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000010000";
    constant ap_ST_st6_fsm_5 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000100000";
    constant ap_ST_st7_fsm_6 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000001000000";
    constant ap_ST_st8_fsm_7 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000010000000";
    constant ap_ST_st9_fsm_8 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000100000000";
    constant ap_ST_st10_fsm_9 : STD_LOGIC_VECTOR (19 downto 0) := "00000000001000000000";
    constant ap_ST_st11_fsm_10 : STD_LOGIC_VECTOR (19 downto 0) := "00000000010000000000";
    constant ap_ST_st12_fsm_11 : STD_LOGIC_VECTOR (19 downto 0) := "00000000100000000000";
    constant ap_ST_st13_fsm_12 : STD_LOGIC_VECTOR (19 downto 0) := "00000001000000000000";
    constant ap_ST_st14_fsm_13 : STD_LOGIC_VECTOR (19 downto 0) := "00000010000000000000";
    constant ap_ST_st15_fsm_14 : STD_LOGIC_VECTOR (19 downto 0) := "00000100000000000000";
    constant ap_ST_st16_fsm_15 : STD_LOGIC_VECTOR (19 downto 0) := "00001000000000000000";
    constant ap_ST_st17_fsm_16 : STD_LOGIC_VECTOR (19 downto 0) := "00010000000000000000";
    constant ap_ST_st18_fsm_17 : STD_LOGIC_VECTOR (19 downto 0) := "00100000000000000000";
    constant ap_ST_st19_fsm_18 : STD_LOGIC_VECTOR (19 downto 0) := "01000000000000000000";
    constant ap_ST_st20_fsm_19 : STD_LOGIC_VECTOR (19 downto 0) := "10000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv22_556 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000010101010110";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";

    signal p_str3_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_str3_ce0 : STD_LOGIC;
    signal p_str3_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_str4_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_str4_ce0 : STD_LOGIC;
    signal p_str4_q0 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_str5_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_str5_ce0 : STD_LOGIC;
    signal p_str5_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str6_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_str6_ce0 : STD_LOGIC;
    signal p_str6_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str7_address0 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_str7_ce0 : STD_LOGIC;
    signal p_str7_q0 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_sig_cseq_ST_st2_fsm_1 : STD_LOGIC;
    signal ap_sig_bdd_83 : BOOLEAN;
    signal tmp_i_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i_reg_354 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rec_i_fu_209_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_rec_i_reg_358 : STD_LOGIC_VECTOR (3 downto 0);
    signal p_str3_load_cast_fu_215_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str3_load_cast_reg_363 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st3_fsm_2 : STD_LOGIC;
    signal ap_sig_bdd_97 : BOOLEAN;
    signal ap_sig_bdd_104 : BOOLEAN;
    signal b_fu_219_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_reg_368 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_fu_223_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_reg_373 : STD_LOGIC_VECTOR (7 downto 0);
    signal r_cast6_fu_233_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal r_cast6_reg_378 : STD_LOGIC_VECTOR (9 downto 0);
    signal g_fu_237_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_reg_383 : STD_LOGIC_VECTOR (7 downto 0);
    signal g_cast5_fu_247_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal g_cast5_reg_388 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_cast4_fu_251_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_cast4_reg_393 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_sig_cseq_ST_st5_fsm_4 : STD_LOGIC;
    signal ap_sig_bdd_127 : BOOLEAN;
    signal tmp_i2_fu_269_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_i2_reg_406 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_rec_i7_fu_275_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_rec_i7_reg_410 : STD_LOGIC_VECTOR (1 downto 0);
    signal p_str4_load_cast_fu_281_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str4_load_cast_reg_415 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st6_fsm_5 : STD_LOGIC;
    signal ap_sig_bdd_140 : BOOLEAN;
    signal ap_sig_cseq_ST_st17_fsm_16 : STD_LOGIC;
    signal ap_sig_bdd_149 : BOOLEAN;
    signal p_str7_load_cast_fu_299_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_str7_load_cast_reg_428 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_sig_cseq_ST_st18_fsm_17 : STD_LOGIC;
    signal ap_sig_bdd_158 : BOOLEAN;
    signal y_reg_433 : STD_LOGIC_VECTOR (9 downto 0);
    signal p_0_rec_i8_reg_157 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_xillybus_wrapper_xilly_decprint_fu_172_ap_start : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_decprint_fu_172_ap_done : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_decprint_fu_172_ap_idle : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_decprint_fu_172_ap_ready : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_decprint_fu_172_val_r : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xillybus_wrapper_xilly_decprint_fu_172_debug_ready : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_start : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_done : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_idle : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_ready : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_str_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_str_ce0 : STD_LOGIC;
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_str_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_ready : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out_ap_vld : STD_LOGIC;
    signal p_0_rec_i_reg_135 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_sig_cseq_ST_st1_fsm_0 : STD_LOGIC;
    signal ap_sig_bdd_196 : BOOLEAN;
    signal ap_sig_cseq_ST_st4_fsm_3 : STD_LOGIC;
    signal ap_sig_bdd_203 : BOOLEAN;
    signal tmp_fu_255_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_0_rec_i1_reg_146 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_cseq_ST_st7_fsm_6 : STD_LOGIC;
    signal ap_sig_bdd_217 : BOOLEAN;
    signal tmp_1_fu_285_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_cseq_ST_st16_fsm_15 : STD_LOGIC;
    signal ap_sig_bdd_229 : BOOLEAN;
    signal ap_sig_cseq_ST_st19_fsm_18 : STD_LOGIC;
    signal ap_sig_bdd_239 : BOOLEAN;
    signal tmp_2_fu_336_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_xillybus_wrapper_xilly_decprint_fu_172_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st11_fsm_10 : STD_LOGIC;
    signal ap_sig_bdd_255 : BOOLEAN;
    signal ap_sig_cseq_ST_st15_fsm_14 : STD_LOGIC;
    signal ap_sig_bdd_263 : BOOLEAN;
    signal ap_sig_cseq_ST_st8_fsm_7 : STD_LOGIC;
    signal ap_sig_bdd_271 : BOOLEAN;
    signal ap_sig_cseq_ST_st12_fsm_11 : STD_LOGIC;
    signal ap_sig_bdd_278 : BOOLEAN;
    signal grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_start_ap_start_reg : STD_LOGIC := '0';
    signal ap_sig_cseq_ST_st9_fsm_8 : STD_LOGIC;
    signal ap_sig_bdd_314 : BOOLEAN;
    signal ap_sig_cseq_ST_st13_fsm_12 : STD_LOGIC;
    signal ap_sig_bdd_321 : BOOLEAN;
    signal ap_sig_cseq_ST_st10_fsm_9 : STD_LOGIC;
    signal ap_sig_bdd_329 : BOOLEAN;
    signal ap_sig_cseq_ST_st14_fsm_13 : STD_LOGIC;
    signal ap_sig_bdd_336 : BOOLEAN;
    signal p_0_rec_i_cast_fu_198_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_rec_i1_cast_fu_264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_0_rec_i8_cast_fu_294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_cseq_ST_st20_fsm_19 : STD_LOGIC;
    signal ap_sig_bdd_361 : BOOLEAN;
    signal tmp1_fu_303_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp1_cast_fu_307_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_3_fu_311_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_fu_320_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_fu_320_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (19 downto 0);
    signal mul_fu_320_p00 : STD_LOGIC_VECTOR (21 downto 0);

    component xillybus_wrapper_xilly_decprint IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        val_r : IN STD_LOGIC_VECTOR (7 downto 0);
        debug_ready : IN STD_LOGIC_VECTOR (7 downto 0);
        debug_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        debug_out_ap_vld : OUT STD_LOGIC );
    end component;


    component xillybus_wrapper_xilly_puts_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        str_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        str_ce0 : OUT STD_LOGIC;
        str_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        debug_ready : IN STD_LOGIC_VECTOR (7 downto 0);
        debug_out : OUT STD_LOGIC_VECTOR (7 downto 0);
        debug_out_ap_vld : OUT STD_LOGIC );
    end component;


    component xillybus_wrapper_p_str3 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component xillybus_wrapper_p_str4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (6 downto 0) );
    end component;


    component xillybus_wrapper_p_str5 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xillybus_wrapper_p_str6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xillybus_wrapper_p_str7 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (0 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (3 downto 0) );
    end component;



begin
    p_str3_U : component xillybus_wrapper_p_str3
    generic map (
        DataWidth => 7,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str3_address0,
        ce0 => p_str3_ce0,
        q0 => p_str3_q0);

    p_str4_U : component xillybus_wrapper_p_str4
    generic map (
        DataWidth => 7,
        AddressRange => 3,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str4_address0,
        ce0 => p_str4_ce0,
        q0 => p_str4_q0);

    p_str5_U : component xillybus_wrapper_p_str5
    generic map (
        DataWidth => 8,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str5_address0,
        ce0 => p_str5_ce0,
        q0 => p_str5_q0);

    p_str6_U : component xillybus_wrapper_p_str6
    generic map (
        DataWidth => 8,
        AddressRange => 4,
        AddressWidth => 2)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str6_address0,
        ce0 => p_str6_ce0,
        q0 => p_str6_q0);

    p_str7_U : component xillybus_wrapper_p_str7
    generic map (
        DataWidth => 4,
        AddressRange => 2,
        AddressWidth => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => p_str7_address0,
        ce0 => p_str7_ce0,
        q0 => p_str7_q0);

    grp_xillybus_wrapper_xilly_decprint_fu_172 : component xillybus_wrapper_xilly_decprint
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xillybus_wrapper_xilly_decprint_fu_172_ap_start,
        ap_done => grp_xillybus_wrapper_xilly_decprint_fu_172_ap_done,
        ap_idle => grp_xillybus_wrapper_xilly_decprint_fu_172_ap_idle,
        ap_ready => grp_xillybus_wrapper_xilly_decprint_fu_172_ap_ready,
        val_r => grp_xillybus_wrapper_xilly_decprint_fu_172_val_r,
        debug_ready => grp_xillybus_wrapper_xilly_decprint_fu_172_debug_ready,
        debug_out => grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out,
        debug_out_ap_vld => grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld);

    grp_xillybus_wrapper_xilly_puts_1_fu_183 : component xillybus_wrapper_xilly_puts_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_start,
        ap_done => grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_done,
        ap_idle => grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_idle,
        ap_ready => grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_ready,
        str_address0 => grp_xillybus_wrapper_xilly_puts_1_fu_183_str_address0,
        str_ce0 => grp_xillybus_wrapper_xilly_puts_1_fu_183_str_ce0,
        str_q0 => grp_xillybus_wrapper_xilly_puts_1_fu_183_str_q0,
        debug_ready => grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_ready,
        debug_out => grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out,
        debug_out_ap_vld => grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out_ap_vld);





    -- the current state (ap_CS_fsm) of the state machine. --
    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_st1_fsm_0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    -- grp_xillybus_wrapper_xilly_decprint_fu_172_ap_start_ap_start_reg assign process. --
    grp_xillybus_wrapper_xilly_decprint_fu_172_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xillybus_wrapper_xilly_decprint_fu_172_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_i2_reg_406))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14))) then 
                    grp_xillybus_wrapper_xilly_decprint_fu_172_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_xillybus_wrapper_xilly_decprint_fu_172_ap_ready)) then 
                    grp_xillybus_wrapper_xilly_decprint_fu_172_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_start_ap_start_reg assign process. --
    grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_start_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_start_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12))) then 
                    grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_start_ap_start_reg <= ap_const_logic_1;
                elsif ((ap_const_logic_1 = grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_ready)) then 
                    grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_start_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    -- p_0_rec_i1_reg_146 assign process. --
    p_0_rec_i1_reg_146_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_1_fu_285_p1)))) then 
                p_0_rec_i1_reg_146 <= p_rec_i7_reg_410;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((tmp_i_reg_354 = ap_const_lv1_0)) and not(ap_sig_bdd_104))) then 
                p_0_rec_i1_reg_146 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    -- p_0_rec_i8_reg_157 assign process. --
    p_0_rec_i8_reg_157_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and not((ap_const_lv1_0 = tmp_2_fu_336_p1)))) then 
                p_0_rec_i8_reg_157 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and not((ap_const_logic_0 = grp_xillybus_wrapper_xilly_decprint_fu_172_ap_done)))) then 
                p_0_rec_i8_reg_157 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    -- p_0_rec_i_reg_135 assign process. --
    p_0_rec_i_reg_135_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_fu_255_p1)))) then 
                p_0_rec_i_reg_135 <= p_rec_i_reg_358;
            elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st1_fsm_0)) then 
                p_0_rec_i_reg_135 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((tmp_i_reg_354 = ap_const_lv1_0)) and not(ap_sig_bdd_104))) then
                b_cast4_reg_393(0) <= b_cast4_fu_251_p1(0);
    b_cast4_reg_393(1) <= b_cast4_fu_251_p1(1);
    b_cast4_reg_393(2) <= b_cast4_fu_251_p1(2);
    b_cast4_reg_393(3) <= b_cast4_fu_251_p1(3);
    b_cast4_reg_393(4) <= b_cast4_fu_251_p1(4);
    b_cast4_reg_393(5) <= b_cast4_fu_251_p1(5);
    b_cast4_reg_393(6) <= b_cast4_fu_251_p1(6);
    b_cast4_reg_393(7) <= b_cast4_fu_251_p1(7);
                b_reg_368 <= b_fu_219_p1;
                g_cast5_reg_388(0) <= g_cast5_fu_247_p1(0);
    g_cast5_reg_388(1) <= g_cast5_fu_247_p1(1);
    g_cast5_reg_388(2) <= g_cast5_fu_247_p1(2);
    g_cast5_reg_388(3) <= g_cast5_fu_247_p1(3);
    g_cast5_reg_388(4) <= g_cast5_fu_247_p1(4);
    g_cast5_reg_388(5) <= g_cast5_fu_247_p1(5);
    g_cast5_reg_388(6) <= g_cast5_fu_247_p1(6);
    g_cast5_reg_388(7) <= g_cast5_fu_247_p1(7);
                g_reg_383 <= in_r_dout(15 downto 8);
                r_cast6_reg_378(0) <= r_cast6_fu_233_p1(0);
    r_cast6_reg_378(1) <= r_cast6_fu_233_p1(1);
    r_cast6_reg_378(2) <= r_cast6_fu_233_p1(2);
    r_cast6_reg_378(3) <= r_cast6_fu_233_p1(3);
    r_cast6_reg_378(4) <= r_cast6_fu_233_p1(4);
    r_cast6_reg_378(5) <= r_cast6_fu_233_p1(5);
    r_cast6_reg_378(6) <= r_cast6_fu_233_p1(6);
    r_cast6_reg_378(7) <= r_cast6_fu_233_p1(7);
                r_reg_373 <= in_r_dout(23 downto 16);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then
                p_rec_i7_reg_410 <= p_rec_i7_fu_275_p2;
                tmp_i2_reg_406 <= tmp_i2_fu_269_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then
                p_rec_i_reg_358 <= p_rec_i_fu_209_p2;
                tmp_i_reg_354 <= tmp_i_fu_203_p2;
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not(ap_sig_bdd_104))) then
                p_str3_load_cast_reg_363(0) <= p_str3_load_cast_fu_215_p1(0);
    p_str3_load_cast_reg_363(1) <= p_str3_load_cast_fu_215_p1(1);
    p_str3_load_cast_reg_363(2) <= p_str3_load_cast_fu_215_p1(2);
    p_str3_load_cast_reg_363(3) <= p_str3_load_cast_fu_215_p1(3);
    p_str3_load_cast_reg_363(4) <= p_str3_load_cast_fu_215_p1(4);
    p_str3_load_cast_reg_363(5) <= p_str3_load_cast_fu_215_p1(5);
    p_str3_load_cast_reg_363(6) <= p_str3_load_cast_fu_215_p1(6);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5)) then
                p_str4_load_cast_reg_415(0) <= p_str4_load_cast_fu_281_p1(0);
    p_str4_load_cast_reg_415(1) <= p_str4_load_cast_fu_281_p1(1);
    p_str4_load_cast_reg_415(2) <= p_str4_load_cast_fu_281_p1(2);
    p_str4_load_cast_reg_415(3) <= p_str4_load_cast_fu_281_p1(3);
    p_str4_load_cast_reg_415(4) <= p_str4_load_cast_fu_281_p1(4);
    p_str4_load_cast_reg_415(5) <= p_str4_load_cast_fu_281_p1(5);
    p_str4_load_cast_reg_415(6) <= p_str4_load_cast_fu_281_p1(6);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17)) then
                p_str7_load_cast_reg_428(0) <= p_str7_load_cast_fu_299_p1(0);
    p_str7_load_cast_reg_428(1) <= p_str7_load_cast_fu_299_p1(1);
    p_str7_load_cast_reg_428(2) <= p_str7_load_cast_fu_299_p1(2);
    p_str7_load_cast_reg_428(3) <= p_str7_load_cast_fu_299_p1(3);
            end if;
        end if;
    end process;

    -- assign process. --
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_sig_cseq_ST_st18_fsm_17) and not((ap_const_lv1_0 = p_0_rec_i8_reg_157)))) then
                y_reg_433 <= mul_fu_320_p2(21 downto 12);
            end if;
        end if;
    end process;
    p_str3_load_cast_reg_363(7) <= '0';
    r_cast6_reg_378(9 downto 8) <= "00";
    g_cast5_reg_388(8) <= '0';
    b_cast4_reg_393(8) <= '0';
    p_str4_load_cast_reg_415(7) <= '0';
    p_str7_load_cast_reg_428(7 downto 4) <= "0000";

    -- the next state (ap_NS_fsm) of the state machine. --
    ap_NS_fsm_assign_proc : process (out_r_full_n, ap_CS_fsm, tmp_i_reg_354, ap_sig_bdd_104, tmp_i2_reg_406, p_0_rec_i8_reg_157, grp_xillybus_wrapper_xilly_decprint_fu_172_ap_done, grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_done, tmp_fu_255_p1, tmp_1_fu_285_p1, tmp_2_fu_336_p1)
    begin
        case ap_CS_fsm is
            when ap_ST_st1_fsm_0 => 
                ap_NS_fsm <= ap_ST_st2_fsm_1;
            when ap_ST_st2_fsm_1 => 
                ap_NS_fsm <= ap_ST_st3_fsm_2;
            when ap_ST_st3_fsm_2 => 
                if ((not((tmp_i_reg_354 = ap_const_lv1_0)) and not(ap_sig_bdd_104))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                elsif (((tmp_i_reg_354 = ap_const_lv1_0) and not(ap_sig_bdd_104))) then
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                else
                    ap_NS_fsm <= ap_ST_st3_fsm_2;
                end if;
            when ap_ST_st4_fsm_3 => 
                if (not((ap_const_lv1_0 = tmp_fu_255_p1))) then
                    ap_NS_fsm <= ap_ST_st2_fsm_1;
                else
                    ap_NS_fsm <= ap_ST_st4_fsm_3;
                end if;
            when ap_ST_st5_fsm_4 => 
                ap_NS_fsm <= ap_ST_st6_fsm_5;
            when ap_ST_st6_fsm_5 => 
                if (not((ap_const_lv1_0 = tmp_i2_reg_406))) then
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st7_fsm_6 => 
                if (not((ap_const_lv1_0 = tmp_1_fu_285_p1))) then
                    ap_NS_fsm <= ap_ST_st5_fsm_4;
                else
                    ap_NS_fsm <= ap_ST_st7_fsm_6;
                end if;
            when ap_ST_st8_fsm_7 => 
                if (not((ap_const_logic_0 = grp_xillybus_wrapper_xilly_decprint_fu_172_ap_done))) then
                    ap_NS_fsm <= ap_ST_st9_fsm_8;
                else
                    ap_NS_fsm <= ap_ST_st8_fsm_7;
                end if;
            when ap_ST_st9_fsm_8 => 
                ap_NS_fsm <= ap_ST_st10_fsm_9;
            when ap_ST_st10_fsm_9 => 
                if (not((ap_const_logic_0 = grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_done))) then
                    ap_NS_fsm <= ap_ST_st11_fsm_10;
                else
                    ap_NS_fsm <= ap_ST_st10_fsm_9;
                end if;
            when ap_ST_st11_fsm_10 => 
                ap_NS_fsm <= ap_ST_st12_fsm_11;
            when ap_ST_st12_fsm_11 => 
                if (not((ap_const_logic_0 = grp_xillybus_wrapper_xilly_decprint_fu_172_ap_done))) then
                    ap_NS_fsm <= ap_ST_st13_fsm_12;
                else
                    ap_NS_fsm <= ap_ST_st12_fsm_11;
                end if;
            when ap_ST_st13_fsm_12 => 
                ap_NS_fsm <= ap_ST_st14_fsm_13;
            when ap_ST_st14_fsm_13 => 
                if (not((ap_const_logic_0 = grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_done))) then
                    ap_NS_fsm <= ap_ST_st15_fsm_14;
                else
                    ap_NS_fsm <= ap_ST_st14_fsm_13;
                end if;
            when ap_ST_st15_fsm_14 => 
                ap_NS_fsm <= ap_ST_st16_fsm_15;
            when ap_ST_st16_fsm_15 => 
                if (not((ap_const_logic_0 = grp_xillybus_wrapper_xilly_decprint_fu_172_ap_done))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                else
                    ap_NS_fsm <= ap_ST_st16_fsm_15;
                end if;
            when ap_ST_st17_fsm_16 => 
                ap_NS_fsm <= ap_ST_st18_fsm_17;
            when ap_ST_st18_fsm_17 => 
                if (not((ap_const_lv1_0 = p_0_rec_i8_reg_157))) then
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                else
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                end if;
            when ap_ST_st19_fsm_18 => 
                if (not((ap_const_lv1_0 = tmp_2_fu_336_p1))) then
                    ap_NS_fsm <= ap_ST_st17_fsm_16;
                else
                    ap_NS_fsm <= ap_ST_st19_fsm_18;
                end if;
            when ap_ST_st20_fsm_19 => 
                if (not((out_r_full_n = ap_const_logic_0))) then
                    ap_NS_fsm <= ap_ST_st1_fsm_0;
                else
                    ap_NS_fsm <= ap_ST_st20_fsm_19;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    -- ap_sig_bdd_104 assign process. --
    ap_sig_bdd_104_assign_proc : process(in_r_empty_n, tmp_i_reg_354)
    begin
                ap_sig_bdd_104 <= ((in_r_empty_n = ap_const_logic_0) and not((tmp_i_reg_354 = ap_const_lv1_0)));
    end process;


    -- ap_sig_bdd_127 assign process. --
    ap_sig_bdd_127_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_127 <= (ap_const_lv1_1 = ap_CS_fsm(4 downto 4));
    end process;


    -- ap_sig_bdd_140 assign process. --
    ap_sig_bdd_140_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_140 <= (ap_const_lv1_1 = ap_CS_fsm(5 downto 5));
    end process;


    -- ap_sig_bdd_149 assign process. --
    ap_sig_bdd_149_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_149 <= (ap_const_lv1_1 = ap_CS_fsm(16 downto 16));
    end process;


    -- ap_sig_bdd_158 assign process. --
    ap_sig_bdd_158_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_158 <= (ap_const_lv1_1 = ap_CS_fsm(17 downto 17));
    end process;


    -- ap_sig_bdd_196 assign process. --
    ap_sig_bdd_196_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_196 <= (ap_const_lv1_1 = ap_CS_fsm(0 downto 0));
    end process;


    -- ap_sig_bdd_203 assign process. --
    ap_sig_bdd_203_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_203 <= (ap_const_lv1_1 = ap_CS_fsm(3 downto 3));
    end process;


    -- ap_sig_bdd_217 assign process. --
    ap_sig_bdd_217_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_217 <= (ap_const_lv1_1 = ap_CS_fsm(6 downto 6));
    end process;


    -- ap_sig_bdd_229 assign process. --
    ap_sig_bdd_229_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_229 <= (ap_const_lv1_1 = ap_CS_fsm(15 downto 15));
    end process;


    -- ap_sig_bdd_239 assign process. --
    ap_sig_bdd_239_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_239 <= (ap_const_lv1_1 = ap_CS_fsm(18 downto 18));
    end process;


    -- ap_sig_bdd_255 assign process. --
    ap_sig_bdd_255_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_255 <= (ap_const_lv1_1 = ap_CS_fsm(10 downto 10));
    end process;


    -- ap_sig_bdd_263 assign process. --
    ap_sig_bdd_263_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_263 <= (ap_const_lv1_1 = ap_CS_fsm(14 downto 14));
    end process;


    -- ap_sig_bdd_271 assign process. --
    ap_sig_bdd_271_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_271 <= (ap_const_lv1_1 = ap_CS_fsm(7 downto 7));
    end process;


    -- ap_sig_bdd_278 assign process. --
    ap_sig_bdd_278_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_278 <= (ap_const_lv1_1 = ap_CS_fsm(11 downto 11));
    end process;


    -- ap_sig_bdd_314 assign process. --
    ap_sig_bdd_314_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_314 <= (ap_const_lv1_1 = ap_CS_fsm(8 downto 8));
    end process;


    -- ap_sig_bdd_321 assign process. --
    ap_sig_bdd_321_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_321 <= (ap_const_lv1_1 = ap_CS_fsm(12 downto 12));
    end process;


    -- ap_sig_bdd_329 assign process. --
    ap_sig_bdd_329_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_329 <= (ap_const_lv1_1 = ap_CS_fsm(9 downto 9));
    end process;


    -- ap_sig_bdd_336 assign process. --
    ap_sig_bdd_336_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_336 <= (ap_const_lv1_1 = ap_CS_fsm(13 downto 13));
    end process;


    -- ap_sig_bdd_361 assign process. --
    ap_sig_bdd_361_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_361 <= (ap_const_lv1_1 = ap_CS_fsm(19 downto 19));
    end process;


    -- ap_sig_bdd_83 assign process. --
    ap_sig_bdd_83_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_83 <= (ap_CS_fsm(1 downto 1) = ap_const_lv1_1);
    end process;


    -- ap_sig_bdd_97 assign process. --
    ap_sig_bdd_97_assign_proc : process(ap_CS_fsm)
    begin
                ap_sig_bdd_97 <= (ap_const_lv1_1 = ap_CS_fsm(2 downto 2));
    end process;


    -- ap_sig_cseq_ST_st10_fsm_9 assign process. --
    ap_sig_cseq_ST_st10_fsm_9_assign_proc : process(ap_sig_bdd_329)
    begin
        if (ap_sig_bdd_329) then 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st10_fsm_9 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st11_fsm_10 assign process. --
    ap_sig_cseq_ST_st11_fsm_10_assign_proc : process(ap_sig_bdd_255)
    begin
        if (ap_sig_bdd_255) then 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st11_fsm_10 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st12_fsm_11 assign process. --
    ap_sig_cseq_ST_st12_fsm_11_assign_proc : process(ap_sig_bdd_278)
    begin
        if (ap_sig_bdd_278) then 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st12_fsm_11 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st13_fsm_12 assign process. --
    ap_sig_cseq_ST_st13_fsm_12_assign_proc : process(ap_sig_bdd_321)
    begin
        if (ap_sig_bdd_321) then 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st13_fsm_12 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st14_fsm_13 assign process. --
    ap_sig_cseq_ST_st14_fsm_13_assign_proc : process(ap_sig_bdd_336)
    begin
        if (ap_sig_bdd_336) then 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st14_fsm_13 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st15_fsm_14 assign process. --
    ap_sig_cseq_ST_st15_fsm_14_assign_proc : process(ap_sig_bdd_263)
    begin
        if (ap_sig_bdd_263) then 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st15_fsm_14 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st16_fsm_15 assign process. --
    ap_sig_cseq_ST_st16_fsm_15_assign_proc : process(ap_sig_bdd_229)
    begin
        if (ap_sig_bdd_229) then 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st16_fsm_15 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st17_fsm_16 assign process. --
    ap_sig_cseq_ST_st17_fsm_16_assign_proc : process(ap_sig_bdd_149)
    begin
        if (ap_sig_bdd_149) then 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st17_fsm_16 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st18_fsm_17 assign process. --
    ap_sig_cseq_ST_st18_fsm_17_assign_proc : process(ap_sig_bdd_158)
    begin
        if (ap_sig_bdd_158) then 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st18_fsm_17 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st19_fsm_18 assign process. --
    ap_sig_cseq_ST_st19_fsm_18_assign_proc : process(ap_sig_bdd_239)
    begin
        if (ap_sig_bdd_239) then 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st19_fsm_18 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st1_fsm_0 assign process. --
    ap_sig_cseq_ST_st1_fsm_0_assign_proc : process(ap_sig_bdd_196)
    begin
        if (ap_sig_bdd_196) then 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st1_fsm_0 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st20_fsm_19 assign process. --
    ap_sig_cseq_ST_st20_fsm_19_assign_proc : process(ap_sig_bdd_361)
    begin
        if (ap_sig_bdd_361) then 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st20_fsm_19 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st2_fsm_1 assign process. --
    ap_sig_cseq_ST_st2_fsm_1_assign_proc : process(ap_sig_bdd_83)
    begin
        if (ap_sig_bdd_83) then 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st2_fsm_1 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st3_fsm_2 assign process. --
    ap_sig_cseq_ST_st3_fsm_2_assign_proc : process(ap_sig_bdd_97)
    begin
        if (ap_sig_bdd_97) then 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st3_fsm_2 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st4_fsm_3 assign process. --
    ap_sig_cseq_ST_st4_fsm_3_assign_proc : process(ap_sig_bdd_203)
    begin
        if (ap_sig_bdd_203) then 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st4_fsm_3 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st5_fsm_4 assign process. --
    ap_sig_cseq_ST_st5_fsm_4_assign_proc : process(ap_sig_bdd_127)
    begin
        if (ap_sig_bdd_127) then 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st5_fsm_4 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st6_fsm_5 assign process. --
    ap_sig_cseq_ST_st6_fsm_5_assign_proc : process(ap_sig_bdd_140)
    begin
        if (ap_sig_bdd_140) then 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st6_fsm_5 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st7_fsm_6 assign process. --
    ap_sig_cseq_ST_st7_fsm_6_assign_proc : process(ap_sig_bdd_217)
    begin
        if (ap_sig_bdd_217) then 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st7_fsm_6 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st8_fsm_7 assign process. --
    ap_sig_cseq_ST_st8_fsm_7_assign_proc : process(ap_sig_bdd_271)
    begin
        if (ap_sig_bdd_271) then 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st8_fsm_7 <= ap_const_logic_0;
        end if; 
    end process;


    -- ap_sig_cseq_ST_st9_fsm_8 assign process. --
    ap_sig_cseq_ST_st9_fsm_8_assign_proc : process(ap_sig_bdd_314)
    begin
        if (ap_sig_bdd_314) then 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_1;
        else 
            ap_sig_cseq_ST_st9_fsm_8 <= ap_const_logic_0;
        end if; 
    end process;

    b_cast4_fu_251_p1 <= std_logic_vector(resize(unsigned(b_fu_219_p1),9));
    b_fu_219_p1 <= in_r_dout(8 - 1 downto 0);

    -- debug_out assign process. --
    debug_out_assign_proc : process(p_str3_load_cast_reg_363, tmp_i2_reg_406, p_str4_load_cast_reg_415, ap_sig_cseq_ST_st6_fsm_5, p_str7_load_cast_reg_428, grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out, grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld, grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out, grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out_ap_vld, ap_sig_cseq_ST_st4_fsm_3, tmp_fu_255_p1, ap_sig_cseq_ST_st7_fsm_6, tmp_1_fu_285_p1, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st19_fsm_18, tmp_2_fu_336_p1, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and not((ap_const_lv1_0 = tmp_2_fu_336_p1)))) then 
            debug_out <= p_str7_load_cast_reg_428;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_1_fu_285_p1)))) then 
            debug_out <= p_str4_load_cast_reg_415;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_fu_255_p1)))) then 
            debug_out <= p_str3_load_cast_reg_363;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out_ap_vld)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out_ap_vld)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out_ap_vld)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out_ap_vld)))) then 
            debug_out <= grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out;
        elsif ((((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_i2_reg_406)) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld)) or ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) and (ap_const_logic_1 = grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld)))) then 
            debug_out <= grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out;
        else 
            debug_out <= "XXXXXXXX";
        end if; 
    end process;


    -- debug_out_ap_vld assign process. --
    debug_out_ap_vld_assign_proc : process(tmp_i2_reg_406, ap_sig_cseq_ST_st6_fsm_5, grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld, grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out_ap_vld, ap_sig_cseq_ST_st4_fsm_3, tmp_fu_255_p1, ap_sig_cseq_ST_st7_fsm_6, tmp_1_fu_285_p1, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st19_fsm_18, tmp_2_fu_336_p1, ap_sig_cseq_ST_st11_fsm_10, ap_sig_cseq_ST_st15_fsm_14, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11, ap_sig_cseq_ST_st9_fsm_8, ap_sig_cseq_ST_st13_fsm_12, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((((ap_const_logic_1 = ap_sig_cseq_ST_st4_fsm_3) and not((ap_const_lv1_0 = tmp_fu_255_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st7_fsm_6) and not((ap_const_lv1_0 = tmp_1_fu_285_p1))) or ((ap_const_logic_1 = ap_sig_cseq_ST_st19_fsm_18) and not((ap_const_lv1_0 = tmp_2_fu_336_p1))))) then 
            debug_out_ap_vld <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st9_fsm_8) or (ap_const_logic_1 = ap_sig_cseq_ST_st13_fsm_12) or (ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9) or (ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13))) then 
            debug_out_ap_vld <= grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_out_ap_vld;
        elsif (((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15) or ((ap_const_logic_1 = ap_sig_cseq_ST_st6_fsm_5) and not((ap_const_lv1_0 = tmp_i2_reg_406))) or (ap_const_logic_1 = ap_sig_cseq_ST_st11_fsm_10) or (ap_const_logic_1 = ap_sig_cseq_ST_st15_fsm_14) or (ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7) or (ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11))) then 
            debug_out_ap_vld <= grp_xillybus_wrapper_xilly_decprint_fu_172_debug_out_ap_vld;
        else 
            debug_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    g_cast5_fu_247_p1 <= std_logic_vector(resize(unsigned(g_fu_237_p4),9));
    g_fu_237_p4 <= in_r_dout(15 downto 8);
    grp_xillybus_wrapper_xilly_decprint_fu_172_ap_start <= grp_xillybus_wrapper_xilly_decprint_fu_172_ap_start_ap_start_reg;
    grp_xillybus_wrapper_xilly_decprint_fu_172_debug_ready <= debug_ready;

    -- grp_xillybus_wrapper_xilly_decprint_fu_172_val_r assign process. --
    grp_xillybus_wrapper_xilly_decprint_fu_172_val_r_assign_proc : process(b_reg_368, r_reg_373, g_reg_383, ap_sig_cseq_ST_st16_fsm_15, ap_sig_cseq_ST_st8_fsm_7, ap_sig_cseq_ST_st12_fsm_11)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st16_fsm_15)) then 
            grp_xillybus_wrapper_xilly_decprint_fu_172_val_r <= b_reg_368;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st12_fsm_11)) then 
            grp_xillybus_wrapper_xilly_decprint_fu_172_val_r <= g_reg_383;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st8_fsm_7)) then 
            grp_xillybus_wrapper_xilly_decprint_fu_172_val_r <= r_reg_373;
        else 
            grp_xillybus_wrapper_xilly_decprint_fu_172_val_r <= "XXXXXXXX";
        end if; 
    end process;

    grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_start <= grp_xillybus_wrapper_xilly_puts_1_fu_183_ap_start_ap_start_reg;
    grp_xillybus_wrapper_xilly_puts_1_fu_183_debug_ready <= debug_ready;

    -- grp_xillybus_wrapper_xilly_puts_1_fu_183_str_q0 assign process. --
    grp_xillybus_wrapper_xilly_puts_1_fu_183_str_q0_assign_proc : process(p_str5_q0, p_str6_q0, ap_sig_cseq_ST_st10_fsm_9, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            grp_xillybus_wrapper_xilly_puts_1_fu_183_str_q0 <= p_str6_q0;
        elsif ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            grp_xillybus_wrapper_xilly_puts_1_fu_183_str_q0 <= p_str5_q0;
        else 
            grp_xillybus_wrapper_xilly_puts_1_fu_183_str_q0 <= "XXXXXXXX";
        end if; 
    end process;


    -- in_r_read assign process. --
    in_r_read_assign_proc : process(tmp_i_reg_354, ap_sig_cseq_ST_st3_fsm_2, ap_sig_bdd_104)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st3_fsm_2) and not((tmp_i_reg_354 = ap_const_lv1_0)) and not(ap_sig_bdd_104))) then 
            in_r_read <= ap_const_logic_1;
        else 
            in_r_read <= ap_const_logic_0;
        end if; 
    end process;

    mul_fu_320_p0 <= mul_fu_320_p00(10 - 1 downto 0);
    mul_fu_320_p00 <= std_logic_vector(resize(unsigned(tmp_3_fu_311_p2),22));
    mul_fu_320_p2 <= std_logic_vector(resize(unsigned(mul_fu_320_p0) * unsigned(ap_const_lv22_556), 22));
    out_r_din <= std_logic_vector(resize(unsigned(y_reg_433),32));

    -- out_r_write assign process. --
    out_r_write_assign_proc : process(out_r_full_n, ap_sig_cseq_ST_st20_fsm_19)
    begin
        if (((ap_const_logic_1 = ap_sig_cseq_ST_st20_fsm_19) and not((out_r_full_n = ap_const_logic_0)))) then 
            out_r_write <= ap_const_logic_1;
        else 
            out_r_write <= ap_const_logic_0;
        end if; 
    end process;

    p_0_rec_i1_cast_fu_264_p1 <= std_logic_vector(resize(unsigned(p_0_rec_i1_reg_146),32));
    p_0_rec_i8_cast_fu_294_p1 <= std_logic_vector(resize(unsigned(p_0_rec_i8_reg_157),32));
    p_0_rec_i_cast_fu_198_p1 <= std_logic_vector(resize(unsigned(p_0_rec_i_reg_135),32));
    p_rec_i7_fu_275_p2 <= std_logic_vector(unsigned(p_0_rec_i1_reg_146) + unsigned(ap_const_lv2_1));
    p_rec_i_fu_209_p2 <= std_logic_vector(unsigned(p_0_rec_i_reg_135) + unsigned(ap_const_lv4_1));
    p_str3_address0 <= p_0_rec_i_cast_fu_198_p1(4 - 1 downto 0);

    -- p_str3_ce0 assign process. --
    p_str3_ce0_assign_proc : process(ap_sig_cseq_ST_st2_fsm_1)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st2_fsm_1)) then 
            p_str3_ce0 <= ap_const_logic_1;
        else 
            p_str3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str3_load_cast_fu_215_p1 <= std_logic_vector(resize(unsigned(p_str3_q0),8));
    p_str4_address0 <= p_0_rec_i1_cast_fu_264_p1(2 - 1 downto 0);

    -- p_str4_ce0 assign process. --
    p_str4_ce0_assign_proc : process(ap_sig_cseq_ST_st5_fsm_4)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st5_fsm_4)) then 
            p_str4_ce0 <= ap_const_logic_1;
        else 
            p_str4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str4_load_cast_fu_281_p1 <= std_logic_vector(resize(unsigned(p_str4_q0),8));
    p_str5_address0 <= grp_xillybus_wrapper_xilly_puts_1_fu_183_str_address0;

    -- p_str5_ce0 assign process. --
    p_str5_ce0_assign_proc : process(grp_xillybus_wrapper_xilly_puts_1_fu_183_str_ce0, ap_sig_cseq_ST_st10_fsm_9)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st10_fsm_9)) then 
            p_str5_ce0 <= grp_xillybus_wrapper_xilly_puts_1_fu_183_str_ce0;
        else 
            p_str5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str6_address0 <= grp_xillybus_wrapper_xilly_puts_1_fu_183_str_address0;

    -- p_str6_ce0 assign process. --
    p_str6_ce0_assign_proc : process(grp_xillybus_wrapper_xilly_puts_1_fu_183_str_ce0, ap_sig_cseq_ST_st14_fsm_13)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st14_fsm_13)) then 
            p_str6_ce0 <= grp_xillybus_wrapper_xilly_puts_1_fu_183_str_ce0;
        else 
            p_str6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str7_address0 <= p_0_rec_i8_cast_fu_294_p1(1 - 1 downto 0);

    -- p_str7_ce0 assign process. --
    p_str7_ce0_assign_proc : process(ap_sig_cseq_ST_st17_fsm_16)
    begin
        if ((ap_const_logic_1 = ap_sig_cseq_ST_st17_fsm_16)) then 
            p_str7_ce0 <= ap_const_logic_1;
        else 
            p_str7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    p_str7_load_cast_fu_299_p1 <= std_logic_vector(resize(unsigned(p_str7_q0),8));
    r_cast6_fu_233_p1 <= std_logic_vector(resize(unsigned(r_fu_223_p4),10));
    r_fu_223_p4 <= in_r_dout(23 downto 16);
    tmp1_cast_fu_307_p1 <= std_logic_vector(resize(unsigned(tmp1_fu_303_p2),10));
    tmp1_fu_303_p2 <= std_logic_vector(unsigned(b_cast4_reg_393) + unsigned(g_cast5_reg_388));
    tmp_1_fu_285_p1 <= debug_ready(1 - 1 downto 0);
    tmp_2_fu_336_p1 <= debug_ready(1 - 1 downto 0);
    tmp_3_fu_311_p2 <= std_logic_vector(unsigned(tmp1_cast_fu_307_p1) + unsigned(r_cast6_reg_378));
    tmp_fu_255_p1 <= debug_ready(1 - 1 downto 0);
    tmp_i2_fu_269_p2 <= "1" when (p_0_rec_i1_reg_146 = ap_const_lv2_2) else "0";
    tmp_i_fu_203_p2 <= "1" when (p_0_rec_i_reg_135 = ap_const_lv4_F) else "0";
end behav;
