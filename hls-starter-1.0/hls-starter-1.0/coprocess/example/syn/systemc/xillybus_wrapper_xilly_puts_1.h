// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _xillybus_wrapper_xilly_puts_1_HH_
#define _xillybus_wrapper_xilly_puts_1_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct xillybus_wrapper_xilly_puts_1 : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<2> > str_address0;
    sc_out< sc_logic > str_ce0;
    sc_in< sc_lv<8> > str_q0;
    sc_in< sc_lv<8> > debug_ready;
    sc_out< sc_lv<8> > debug_out;
    sc_out< sc_logic > debug_out_ap_vld;


    // Module declarations
    xillybus_wrapper_xilly_puts_1(sc_module_name name);
    SC_HAS_PROCESS(xillybus_wrapper_xilly_puts_1);

    ~xillybus_wrapper_xilly_puts_1();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_22;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_43;
    sc_signal< sc_lv<32> > p_rec_fu_37_p2;
    sc_signal< sc_lv<32> > p_rec_reg_67;
    sc_signal< sc_lv<8> > str_load_reg_72;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_53;
    sc_signal< sc_lv<32> > p_0_rec_reg_24;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_65;
    sc_signal< sc_lv<1> > tmp_3_fu_53_p1;
    sc_signal< sc_lv<1> > tmp_fu_43_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_st1_fsm_0;
    static const sc_lv<4> ap_ST_st2_fsm_1;
    static const sc_lv<4> ap_ST_st3_fsm_2;
    static const sc_lv<4> ap_ST_st4_fsm_3;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_22();
    void thread_ap_sig_bdd_43();
    void thread_ap_sig_bdd_53();
    void thread_ap_sig_bdd_65();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_debug_out();
    void thread_debug_out_ap_vld();
    void thread_p_rec_fu_37_p2();
    void thread_str_address0();
    void thread_str_ce0();
    void thread_tmp_3_fu_53_p1();
    void thread_tmp_fu_43_p2();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
