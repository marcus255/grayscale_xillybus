// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#include "xillybus_wrapper_xilly_puts_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic xillybus_wrapper_xilly_puts_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic xillybus_wrapper_xilly_puts_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> xillybus_wrapper_xilly_puts_1::ap_ST_st1_fsm_0 = "1";
const sc_lv<4> xillybus_wrapper_xilly_puts_1::ap_ST_st2_fsm_1 = "10";
const sc_lv<4> xillybus_wrapper_xilly_puts_1::ap_ST_st3_fsm_2 = "100";
const sc_lv<4> xillybus_wrapper_xilly_puts_1::ap_ST_st4_fsm_3 = "1000";
const sc_lv<32> xillybus_wrapper_xilly_puts_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<1> xillybus_wrapper_xilly_puts_1::ap_const_lv1_1 = "1";
const sc_lv<32> xillybus_wrapper_xilly_puts_1::ap_const_lv32_1 = "1";
const sc_lv<32> xillybus_wrapper_xilly_puts_1::ap_const_lv32_2 = "10";
const sc_lv<32> xillybus_wrapper_xilly_puts_1::ap_const_lv32_3 = "11";
const sc_lv<1> xillybus_wrapper_xilly_puts_1::ap_const_lv1_0 = "0";
const sc_lv<8> xillybus_wrapper_xilly_puts_1::ap_const_lv8_0 = "00000000";

xillybus_wrapper_xilly_puts_1::xillybus_wrapper_xilly_puts_1(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_fu_43_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_sig_cseq_ST_st1_fsm_0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );
    sensitive << ( tmp_fu_43_p2 );

    SC_METHOD(thread_ap_sig_bdd_22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_43);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_53);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_bdd_65);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_sig_cseq_ST_st1_fsm_0);
    sensitive << ( ap_sig_bdd_22 );

    SC_METHOD(thread_ap_sig_cseq_ST_st2_fsm_1);
    sensitive << ( ap_sig_bdd_43 );

    SC_METHOD(thread_ap_sig_cseq_ST_st3_fsm_2);
    sensitive << ( ap_sig_bdd_53 );

    SC_METHOD(thread_ap_sig_cseq_ST_st4_fsm_3);
    sensitive << ( ap_sig_bdd_65 );

    SC_METHOD(thread_debug_out);
    sensitive << ( str_load_reg_72 );
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_3_fu_53_p1 );

    SC_METHOD(thread_debug_out_ap_vld);
    sensitive << ( ap_sig_cseq_ST_st4_fsm_3 );
    sensitive << ( tmp_3_fu_53_p1 );

    SC_METHOD(thread_p_rec_fu_37_p2);
    sensitive << ( p_0_rec_reg_24 );

    SC_METHOD(thread_str_address0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );
    sensitive << ( p_0_rec_reg_24 );

    SC_METHOD(thread_str_ce0);
    sensitive << ( ap_sig_cseq_ST_st2_fsm_1 );

    SC_METHOD(thread_tmp_3_fu_53_p1);
    sensitive << ( debug_ready );

    SC_METHOD(thread_tmp_fu_43_p2);
    sensitive << ( str_q0 );
    sensitive << ( ap_sig_cseq_ST_st3_fsm_2 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( tmp_3_fu_53_p1 );
    sensitive << ( tmp_fu_43_p2 );

    ap_CS_fsm = "0001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "xillybus_wrapper_xilly_puts_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, str_address0, "(port)str_address0");
    sc_trace(mVcdFile, str_ce0, "(port)str_ce0");
    sc_trace(mVcdFile, str_q0, "(port)str_q0");
    sc_trace(mVcdFile, debug_ready, "(port)debug_ready");
    sc_trace(mVcdFile, debug_out, "(port)debug_out");
    sc_trace(mVcdFile, debug_out_ap_vld, "(port)debug_out_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st1_fsm_0, "ap_sig_cseq_ST_st1_fsm_0");
    sc_trace(mVcdFile, ap_sig_bdd_22, "ap_sig_bdd_22");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st2_fsm_1, "ap_sig_cseq_ST_st2_fsm_1");
    sc_trace(mVcdFile, ap_sig_bdd_43, "ap_sig_bdd_43");
    sc_trace(mVcdFile, p_rec_fu_37_p2, "p_rec_fu_37_p2");
    sc_trace(mVcdFile, p_rec_reg_67, "p_rec_reg_67");
    sc_trace(mVcdFile, str_load_reg_72, "str_load_reg_72");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st3_fsm_2, "ap_sig_cseq_ST_st3_fsm_2");
    sc_trace(mVcdFile, ap_sig_bdd_53, "ap_sig_bdd_53");
    sc_trace(mVcdFile, p_0_rec_reg_24, "p_0_rec_reg_24");
    sc_trace(mVcdFile, ap_sig_cseq_ST_st4_fsm_3, "ap_sig_cseq_ST_st4_fsm_3");
    sc_trace(mVcdFile, ap_sig_bdd_65, "ap_sig_bdd_65");
    sc_trace(mVcdFile, tmp_3_fu_53_p1, "tmp_3_fu_53_p1");
    sc_trace(mVcdFile, tmp_fu_43_p2, "tmp_fu_43_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

xillybus_wrapper_xilly_puts_1::~xillybus_wrapper_xilly_puts_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void xillybus_wrapper_xilly_puts_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_st1_fsm_0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(tmp_3_fu_53_p1.read(), ap_const_lv1_0))) {
        p_0_rec_reg_24 = p_rec_reg_67.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()) && 
                !esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0))) {
        p_0_rec_reg_24 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        p_rec_reg_67 = p_rec_fu_37_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read())) {
        str_load_reg_72 = str_q0.read();
    }
}

void xillybus_wrapper_xilly_puts_1::thread_ap_done() {
    if (((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
          !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_43_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void xillybus_wrapper_xilly_puts_1::thread_ap_idle() {
    if ((!esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st1_fsm_0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void xillybus_wrapper_xilly_puts_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st3_fsm_2.read()) && 
         !esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_43_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void xillybus_wrapper_xilly_puts_1::thread_ap_sig_bdd_22() {
    ap_sig_bdd_22 = esl_seteq<1,1,1>(ap_CS_fsm.read().range(0, 0), ap_const_lv1_1);
}

void xillybus_wrapper_xilly_puts_1::thread_ap_sig_bdd_43() {
    ap_sig_bdd_43 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(1, 1));
}

void xillybus_wrapper_xilly_puts_1::thread_ap_sig_bdd_53() {
    ap_sig_bdd_53 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(2, 2));
}

void xillybus_wrapper_xilly_puts_1::thread_ap_sig_bdd_65() {
    ap_sig_bdd_65 = esl_seteq<1,1,1>(ap_const_lv1_1, ap_CS_fsm.read().range(3, 3));
}

void xillybus_wrapper_xilly_puts_1::thread_ap_sig_cseq_ST_st1_fsm_0() {
    if (ap_sig_bdd_22.read()) {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    }
}

void xillybus_wrapper_xilly_puts_1::thread_ap_sig_cseq_ST_st2_fsm_1() {
    if (ap_sig_bdd_43.read()) {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    }
}

void xillybus_wrapper_xilly_puts_1::thread_ap_sig_cseq_ST_st3_fsm_2() {
    if (ap_sig_bdd_53.read()) {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    }
}

void xillybus_wrapper_xilly_puts_1::thread_ap_sig_cseq_ST_st4_fsm_3() {
    if (ap_sig_bdd_65.read()) {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    } else {
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    }
}

void xillybus_wrapper_xilly_puts_1::thread_debug_out() {
    debug_out = str_load_reg_72.read();
}

void xillybus_wrapper_xilly_puts_1::thread_debug_out_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st4_fsm_3.read()) && 
         !esl_seteq<1,1,1>(tmp_3_fu_53_p1.read(), ap_const_lv1_0))) {
        debug_out_ap_vld = ap_const_logic_1;
    } else {
        debug_out_ap_vld = ap_const_logic_0;
    }
}

void xillybus_wrapper_xilly_puts_1::thread_p_rec_fu_37_p2() {
    p_rec_fu_37_p2 = (!p_0_rec_reg_24.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(p_0_rec_reg_24.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void xillybus_wrapper_xilly_puts_1::thread_str_address0() {
    str_address0 =  (sc_lv<2>) (p_0_rec_reg_24.read());
}

void xillybus_wrapper_xilly_puts_1::thread_str_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_sig_cseq_ST_st2_fsm_1.read())) {
        str_ce0 = ap_const_logic_1;
    } else {
        str_ce0 = ap_const_logic_0;
    }
}

void xillybus_wrapper_xilly_puts_1::thread_tmp_3_fu_53_p1() {
    tmp_3_fu_53_p1 = debug_ready.read().range(1-1, 0);
}

void xillybus_wrapper_xilly_puts_1::thread_tmp_fu_43_p2() {
    tmp_fu_43_p2 = (!str_q0.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(str_q0.read() == ap_const_lv8_0);
}

void xillybus_wrapper_xilly_puts_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if (!esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_st3_fsm_2;
            break;
        case 4 : 
            if (!esl_seteq<1,1,1>(ap_const_lv1_0, tmp_fu_43_p2.read())) {
                ap_NS_fsm = ap_ST_st1_fsm_0;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        case 8 : 
            if (!esl_seteq<1,1,1>(tmp_3_fu_53_p1.read(), ap_const_lv1_0)) {
                ap_NS_fsm = ap_ST_st2_fsm_1;
            } else {
                ap_NS_fsm = ap_ST_st4_fsm_3;
            }
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

