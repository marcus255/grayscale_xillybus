// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2014.4
// Copyright (C) 2014 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _xillybus_wrapper_HH_
#define _xillybus_wrapper_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct xillybus_wrapper : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_lv<32> > in_r_dout;
    sc_in< sc_logic > in_r_empty_n;
    sc_out< sc_logic > in_r_read;
    sc_out< sc_lv<32> > out_r_din;
    sc_in< sc_logic > out_r_full_n;
    sc_out< sc_logic > out_r_write;


    // Module declarations
    xillybus_wrapper(sc_module_name name);
    SC_HAS_PROCESS(xillybus_wrapper);

    ~xillybus_wrapper();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_lv<8> > r_reg_130;
    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_26;
    sc_signal< sc_lv<9> > tmp1_fu_88_p2;
    sc_signal< sc_lv<9> > tmp1_reg_135;
    sc_signal< sc_lv<10> > y_reg_140;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_41;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_51;
    sc_signal< sc_lv<8> > g_fu_70_p4;
    sc_signal< sc_lv<8> > b_fu_56_p1;
    sc_signal< sc_lv<9> > b_cast_fu_84_p1;
    sc_signal< sc_lv<9> > g_cast_fu_80_p1;
    sc_signal< sc_lv<10> > tmp1_cast_fu_97_p1;
    sc_signal< sc_lv<10> > r_cast_fu_94_p1;
    sc_signal< sc_lv<10> > tmp_3_fu_100_p2;
    sc_signal< sc_lv<10> > mul_fu_110_p0;
    sc_signal< sc_lv<22> > mul_fu_110_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    sc_signal< sc_lv<22> > mul_fu_110_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_st1_fsm_0;
    static const sc_lv<3> ap_ST_st2_fsm_1;
    static const sc_lv<3> ap_ST_st3_fsm_2;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<22> ap_const_lv22_556;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_15;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_ap_sig_bdd_26();
    void thread_ap_sig_bdd_41();
    void thread_ap_sig_bdd_51();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_b_cast_fu_84_p1();
    void thread_b_fu_56_p1();
    void thread_g_cast_fu_80_p1();
    void thread_g_fu_70_p4();
    void thread_in_r_read();
    void thread_mul_fu_110_p0();
    void thread_mul_fu_110_p00();
    void thread_mul_fu_110_p2();
    void thread_out_r_din();
    void thread_out_r_write();
    void thread_r_cast_fu_94_p1();
    void thread_tmp1_cast_fu_97_p1();
    void thread_tmp1_fu_88_p2();
    void thread_tmp_3_fu_100_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
